/*! For license information please see cf0f32c23d0cab80a129.server.js.LICENSE.txt */
(()=>{"use strict";var __webpack_modules__={"./server/class/Queue.ts":(__unused_webpack_module,exports)=>{eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Queue = void 0;\r\nclass Queue {\r\n    constructor(queueMax) {\r\n        this.queueMax = 1;\r\n        this.queueList = [];\r\n        this.graceList = [];\r\n        this.queueMax = queueMax;\r\n    }\r\n    getSize() {\r\n        return this.queueList.length;\r\n    }\r\n    getQueueList() {\r\n        return this.queueList;\r\n    }\r\n    getQueueMax() {\r\n        return this.queueMax;\r\n    }\r\n    isQueueFull() {\r\n        return this.queueList.length >= this.queueMax;\r\n    }\r\n    isQueueEmpty() {\r\n        return this.queueList.length === 0;\r\n    }\r\n    enqueue(queue) {\r\n        if (this.isQueueFull()) {\r\n            throw new Error('Queue is full');\r\n        }\r\n        if (this.isQueueEmpty() || queue.priority <= this.queueList[this.queueList.length - 1].priority) {\r\n            this.queueList.push(queue);\r\n        }\r\n        else {\r\n            for (let index in this.queueList) {\r\n                if (queue.priority > this.queueList[index].priority) {\r\n                    this.queueList.splice(Number(index), 0, queue);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return this.queueList.length;\r\n    }\r\n    dequeue(identifier) {\r\n        this.queueList = this.queueList.filter((queue) => queue.identifier !== identifier);\r\n    }\r\n    getPlayerPosition(identifier) {\r\n        return this.queueList.findIndex((queue) => queue.identifier === identifier);\r\n    }\r\n    isPlayerAtFirstPotision(identifier) {\r\n        return this.getPlayerPosition(identifier) === 0;\r\n    }\r\n    addPlayerToGraceList(source, identifier) {\r\n        const player = {\r\n            identifier: identifier,\r\n            time: GetGameTimer(),\r\n        };\r\n        this.graceList.push(player);\r\n    }\r\n    doesPlayerHaveGrace(identifier) {\r\n        return this.graceList.some((queue) => queue.identifier === identifier);\r\n    }\r\n    getPlayerGraceTime(identifier) {\r\n        const player = this.graceList.find((queue) => queue.identifier === identifier);\r\n        if (player) {\r\n            return player.time;\r\n        }\r\n        return 0;\r\n    }\r\n    changePlayerPriority(identifier, priority) {\r\n        const player = this.queueList.find((queue) => queue.identifier === identifier);\r\n        if (player) {\r\n            player.priority = priority;\r\n        }\r\n        this.queueList = this.queueList.sort((a, b) => b.priority - a.priority);\r\n    }\r\n    removePlayerFromGrace(identifier) {\r\n        this.graceList = this.graceList.filter((queue) => queue.identifier !== identifier);\r\n    }\r\n    skipQueue(identifier) {\r\n        const player = this.queueList.find((queue) => queue.identifier === identifier);\r\n        if (player) {\r\n            player.skipQueue = true;\r\n        }\r\n    }\r\n    canPlayerSkipQueue(identifier) {\r\n        const player = this.queueList.find((queue) => queue.identifier === identifier);\r\n        if (player) {\r\n            return player.skipQueue;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.Queue = Queue;\r\n\n\n//# sourceURL=webpack://rm_queue/./server/class/Queue.ts?")},"./server/server.ts":function(__unused_webpack_module,exports,__webpack_require__){eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.fetchUser = void 0;\r\nconst Queue_1 = __webpack_require__(/*! ./class/Queue */ \"./server/class/Queue.ts\");\r\nconst adaptiveCard = JSON.parse(LoadResourceFile('rm_queue', 'adaptiveCard.json'));\r\nStopResource('hardcap');\r\nconst maxPlayers = GetConvar('sv_maxclients', '32');\r\nconst queue = new Queue_1.Queue(parseInt(maxPlayers) * 2);\r\nfunction fetchUser(identifier) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const user = yield global.exports.oxmysql.single_async('SELECT * FROM priorities WHERE identifier = ?', [identifier]);\r\n        return user;\r\n    });\r\n}\r\nexports.fetchUser = fetchUser;\r\nconst emptySlots = () => {\r\n    const players = GetNumPlayerIndices();\r\n    const slots = parseInt(maxPlayers) - players;\r\n    return slots;\r\n};\r\nlet graceTime = 300000;\r\nlet isQueueClosed = false;\r\non('playerConnecting', (name, setKickReason, deferrals) => __awaiter(void 0, void 0, void 0, function* () {\r\n    var _a, _b;\r\n    const _src = +source;\r\n    deferrals.defer();\r\n    if (isQueueClosed && emptySlots() <= 0) {\r\n        return deferrals.done('Queue is closed');\r\n    }\r\n    const identifier = getPlayerIdentifiers(_src)[0];\r\n    const user = yield fetchUser(identifier);\r\n    queue.enqueue({ name, identifier: identifier, priority: (_a = user.priority) !== null && _a !== void 0 ? _a : 1, skipQueue: false });\r\n    const expiresIn = new Date(new Date((_b = user.expires) !== null && _b !== void 0 ? _b : 0).getTime() - new Date().getTime()).getDate();\r\n    const days = `Expires in ${expiresIn} ${expiresIn > 1 ? 'Days' : 'Day'}`;\r\n    let interval = setInterval(() => __awaiter(void 0, void 0, void 0, function* () {\r\n        if (emptySlots() > 2) {\r\n            if (queue.doesPlayerHaveGrace(identifier)) {\r\n                if (queue.getPlayerGraceTime(identifier) + graceTime < GetGameTimer()) {\r\n                    queue.changePlayerPriority(identifier, 100);\r\n                }\r\n                queue.removePlayerFromGrace(identifier);\r\n            }\r\n            if (queue.canPlayerSkipQueue(identifier)) {\r\n                manipulateCard(1, 'A higher staff skipped the queue for you.!');\r\n                manipulateCard(2, `${user.priority ? `You have priority ${user.priority}` : ' You dont have priority'}`);\r\n                manipulateCard(3, `${user.priority ? `Your priority ${days}` : ''}`);\r\n                deferrals.presentCard(adaptiveCard);\r\n                yield Delay(1000);\r\n                global.exports['rm_core'].playerConnecting(_src, name, setKickReason, deferrals);\r\n                clearInterval(interval);\r\n            }\r\n            else if (queue.getPlayerPosition(identifier) === 0) {\r\n                const loadingPlayers = global.exports['rm_core'].getLoadingPlayers();\r\n                deferrals.update(\"You're next in line. Keep waiting.\");\r\n                if (Object.keys(loadingPlayers).length < 20) {\r\n                    yield Delay(1000);\r\n                    global.exports['rm_core'].playerConnecting(_src, name, setKickReason, deferrals);\r\n                    clearInterval(interval);\r\n                }\r\n            }\r\n            else {\r\n                manipulateCard(1, `You are in position: ${queue.getPlayerPosition(identifier) + 1}/${queue.getSize()}`);\r\n                manipulateCard(2, `${user.priority ? `You have priority ${user.priority}` : ' You dont have priority'}`);\r\n                manipulateCard(3, `${user.priority ? `Your priority ${days}` : ''}`);\r\n                deferrals.presentCard(adaptiveCard);\r\n            }\r\n        }\r\n        else {\r\n            manipulateCard(1, `You are in position: ${queue.getPlayerPosition(identifier) + 1}/${queue.getSize()}`);\r\n            manipulateCard(2, `${user.priority ? `You have priority ${user.priority}` : ' You dont have priority'}`);\r\n            manipulateCard(3, `${user.priority ? `Your priority ${days}` : ''}`);\r\n            deferrals.presentCard(adaptiveCard);\r\n        }\r\n    }), 1000);\r\n    return;\r\n}));\r\non('playerDropped', () => {\r\n    const _src = +source;\r\n    const identifier = getPlayerIdentifiers(_src)[0];\r\n    queue.dequeue(identifier);\r\n    queue.addPlayerToGraceList(_src, identifier);\r\n});\r\nonNet('queue:dequeuePlayer', () => {\r\n    const _src = +source;\r\n    const identifier = getPlayerIdentifiers(_src)[0];\r\n    queue.dequeue(identifier);\r\n});\r\nRegisterCommand('skipQueue', (src) => __awaiter(void 0, void 0, void 0, function* () {\r\n    if (src === 0) {\r\n        const identifier = getPlayerIdentifiers(src)[0];\r\n        queue.skipQueue(identifier);\r\n    }\r\n}), true);\r\nRegisterCommand('queue', (src, args, rawCommand) => {\r\n    if (src === 0) {\r\n        if (args[0] === 'close') {\r\n            isQueueClosed = true;\r\n        }\r\n        else if (args[0] === 'open') {\r\n            isQueueClosed = false;\r\n        }\r\n    }\r\n}, true);\r\nconst manipulateCard = (item, text) => {\r\n    adaptiveCard.body[1].items[item].text = text;\r\n};\r\nconst removePlayerFromQueue = (identifier) => {\r\n    queue.dequeue(identifier);\r\n};\r\nconst queueClose = (close) => {\r\n    isQueueClosed = close;\r\n};\r\nglobal.exports('removePlayerFromQueue', removePlayerFromQueue);\r\nglobal.exports('getQueueSize', () => queue.getSize());\r\nglobal.exports('getQueueList', () => queue.getQueueList());\r\nglobal.exports('queue', queueClose);\r\nconst Delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\n\n//# sourceURL=webpack://rm_queue/./server/server.ts?")}},__webpack_module_cache__={};function __webpack_require__(e){var r=__webpack_module_cache__[e];if(void 0!==r)return r.exports;var i=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(i.exports,i,i.exports,__webpack_require__),i.exports}var __webpack_exports__=__webpack_require__("./server/server.ts")})();